; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32

[env]
platform = espressif32
framework = arduino, espidf
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
extra_scripts =
	pre:scripts/prep_webui_folder.py
	post:scripts/clean_webui_folder.py
lib_deps =
	PubSubClient
	https://github.com/munzili/ESPAsyncWebServer
	ArduinoJson
	asjdf/WebSerialLite@^2.2.0
	107-Arduino-MCP2515

board_build.embed_files =
    webui/index.html.gz
    webui/main.js.gz
    webui/md5.min.js.gz
	webui/main.css.gz
	webui/pico.min.css.gz

[env:esp32]
board = esp32dev

[env:esp32_debug]
board = esp32dev
monitor_filters = esp32_exception_decoder
build_type = debug

[env:esp32_debug_noBT]
extends = env:esp32_debug
build_flags =
	${env:esp32_debug.build_flags}
	-D NO_BLUETOOTH

[env:nodemcuv2]
platform = espressif8266
framework = arduino
board = nodemcuv2

[env:m5stickc]
board = m5stick-c
upload_speed = 115200
lib_deps =
	${env.lib_deps}
	M5StickC
build_flags =
	${env.build_flags}
	-Wno-unused-const-variable

[env:m5stickcplus]
board = m5stick-c
upload_speed = 115200
lib_deps =
	${env.lib_deps}
	M5StickCPlus
build_flags =
	${env.build_flags}
	-D ARDUINO_M5Stick_C_Plus
	-Wno-unused-const-variable

[env:native]
# Used to run unit test; g++ must be in PATH.
platform = native
build_flags = "-std=c++11"